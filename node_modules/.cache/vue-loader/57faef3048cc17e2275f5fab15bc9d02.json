{"remainingRequest":"/Users/anestisfinstad/Desktop/Advent-of-Code/adventofcode/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anestisfinstad/Desktop/Advent-of-Code/adventofcode/src/views/Dayfour.vue?vue&type=style&index=0&id=7d228878&scoped=true&lang=css&","dependencies":[{"path":"/Users/anestisfinstad/Desktop/Advent-of-Code/adventofcode/src/views/Dayfour.vue","mtime":1576801711949},{"path":"/Users/anestisfinstad/Desktop/Advent-of-Code/adventofcode/node_modules/css-loader/dist/cjs.js","mtime":1575671960491},{"path":"/Users/anestisfinstad/Desktop/Advent-of-Code/adventofcode/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1572726259852},{"path":"/Users/anestisfinstad/Desktop/Advent-of-Code/adventofcode/node_modules/postcss-loader/src/index.js","mtime":1545857244363},{"path":"/Users/anestisfinstad/Desktop/Advent-of-Code/adventofcode/node_modules/cache-loader/dist/cjs.js","mtime":1572726259477},{"path":"/Users/anestisfinstad/Desktop/Advent-of-Code/adventofcode/node_modules/vue-loader/lib/index.js","mtime":1572726259852}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50ZXh0RGVjbyB7CiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7Cn0K"},{"version":3,"sources":["Dayfour.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmKA;AACA;AACA","file":"Dayfour.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <h1>--- Day 4: Secure Container ---</h1>\n        <p>\n            You arrive at the Venus fuel depot only to discover it's protected by a password. \n            The Elves had written the password on a sticky note, but someone threw it out.\n        </p>\n        <h4 >However, they do remember a few key facts about the password:</h4>\n        <ul class=\"textDeco\">\n            <li>\n                It is a six-digit number.\n            </li>\n            <li>\n                The value is within the range given in your puzzle input.\n            </li>\n            <li>\n                Two adjacent digits are the same (like 22 in 122345).\n            </li>\n            <li>\n                Going from left to right, the digits never decrease; they only ever,\n                increase or stay the same (like 111123 or 135679).\n            </li>\n        </ul>\n        <p>\n            Other than the range rule, the following are true:\n        </p>\n        <ul class=\"textDeco\" >\n            <li>\n                111111 meets these criteria (double 11, never decreases).\n            </li>\n            <li>\n                223450 does not meet these criteria (decreasing pair of digits 50).\n            </li>\n            <li>\n                123789 does not meet these criteria (no double).\n            </li>\n        </ul>\n        <h3>\n            How many different passwords within the range given in your puzzle input meet these criteria?\n        </h3>\n        <h4>Your puzzle answer was 1665.</h4>\n        <br>\n        <h1>--- Part Two ---</h1>\n        <p>\n            An Elf just remembered one more important detail: the two adjacent matching digits are not \n            part of a larger group of matching digits.\n        </p>\n        <p>\n            An Elf just remembered one more important detail: the two adjacent matching digits are not \n            part of a larger group of matching digits.\n        </p>\n        <p>\n            Given this additional criterion, but still ignoring the range rule, the following are now true:\n        </p>\n        <ul class=\"textDeco\">\n            <li>\n                112233 meets these criteria because the digits never decrease and all repeated digits are exactly two digits long.\n            </li>\n            <li>\n                123444 no longer meets the criteria (the repeated 44 is part of a larger group of 444).\n            </li>\n        </ul>\n        <h2>How many different passwords within the range given in your puzzle input meet all of the criteria?</h2>\n        <h2> {{ solution }} </h2>\n    </div>\n</template>\n\n<script>\n    export default {\n        data: function () {\n            return {\n                solution: 0\n            }\n        },\n        methods: {\n            crackVenusCode () {\n                const matching = [];\n\n                for (let i = 158126; i <= 624574; i++) {\n                const stringNum = String(i);\n                //-------------------------------------------\n                let isIncreasing = false;\n                // let containsDouble = false;\n                let containsTriple = true\n                \n                \n                //-------------------------------------------\n                for (let j = 0; j < stringNum.length; j++) {\n                    if (j > 0) {\n                    // Checks if increasing\n                    if (stringNum[j - 1] <= stringNum[j]) {\n                        isIncreasing = true;\n                    } else {\n                        isIncreasing = false;\n                        break; \n                    }\n                    // If a pair and not part of three in a row but three in a row is still ok if there is a pair\n                    if (stringNum[j] === stringNum[j + 1] && stringNum[j] === stringNum[j + 2])\n                        containsTriple = false\n                    \n                    // TRIED: 1609 1232 902 981 173 0 710 1473 1417 880 964 1462 1102 791 \n                    // Solutions form others: 1462 1102\n                    }\n                }\n                \n                //------------------------------------------\n                if (isIncreasing && containsTriple) {\n                    matching.push(i)\n                }\n                this.solution = matching.length\n                }\n\n                console.log(matching.length);\n\n            },\n            possibleSolution() {\n                const day4 = \"193651-624574\";\n\n                const passCount = (str) => {\n                let a = str.split(\"-\")[0];\n                let b = str.split(\"-\")[1];\n                let count = 0;\n                let i = a.toString();\n                let j;\n                let k;\n                while (i < b) {\n                    j = 1;\n                    while (j < i.length) {\n                    k = 1;\n                    if (i[j] < i[j-1]) {\n                        let nextNum = i.substr(0,j).concat(i[j-1].repeat(i.length-j));\n                        i = nextNum;\n                        j = i.length;\n                    } else if (j == i.length-1) {\n                        while (k < i.length) {\n                        if (i[k] == i[k-1] && i[k] != i[k+1] && i[k] != i[k-2]) {\n                            count++;\n                            k = i.length;\n                        } else {\n                            k++;\n                        }\n                        }\n                        i = (parseInt(i) + 1).toString();\n                        j++;\n                    } else {\n                        j++;\n                    }\n                    }\n                }\n                return count && console.log(count);\n                };\n\n                passCount(day4);\n            }\n        },\n        mounted () {\n            this.crackVenusCode()\n            this.possibleSolution()\n        }\n    }\n</script>\n\n<style scoped>\n.textDeco {\n    list-style-type: none;\n}\n</style>"]}]}